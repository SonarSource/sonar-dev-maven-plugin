<!--
Sonar, open source software quality management tool.
Copyright (C) 2008-2011 SonarSource
mailto:contact AT sonarsource DOT com

Sonar is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 3 of the License, or (at your option) any later version.

Sonar is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with Sonar; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02
-->
<pluginMetadata>
  <mojos>
    <mojo>
      <goal>start</goal>
      <description>Start Sonar.</description>
      <call>start</call>
      <requiresProject>false</requiresProject>
      <parameters>
        <parameter>
          <name>runtimeVersion</name>
          <description>Version of the Sonar server to install and start.</description>
          <property>runtimeVersion</property>
          <expression>${sonar.runtimeVersion}</expression>
          <required>true</required>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>database</name>
          <description>Database profile: [h2, derby, mssql, mysql, oracle, postgresql]</description>
          <property>database</property>
          <required>false</required>
          <expression>${sonar.database}</expression>
          <type>java.lang.String</type>
          <defaultValue>h2</defaultValue>
        </parameter>
        <parameter>
          <name>dropDatabase</name>
          <description>Set to true to drop database before starting server</description>
          <property>dropDatabase</property>
          <expression>${sonar.dropDatabase}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>false</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcUrl</name>
          <description>Database URL</description>
          <property>jdbcUrl</property>
          <required>false</required>
          <expression>${sonar.jdbc.url}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcDriver</name>
          <description>Database JDBC driver</description>
          <property>jdbcDriver</property>
          <required>false</required>
          <expression>${sonar.jdbc.driver}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootUsername</name>
          <description>Database root username. Used when dropDatabase is true.</description>
          <property>jdbcRootUsername</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootUsername}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootPassword</name>
          <description>Database root password. Used when dropDatabase is true.</description>
          <property>jdbcRootPassword</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootPassword}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootUrl</name>
          <description>Database root URL. Used when dropDatabase is true.</description>
          <property>jdbcRootUrl</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootUrl}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcUsername</name>
          <description>Database username.</description>
          <property>jdbcUsername</property>
          <required>false</required>
          <expression>${sonar.jdbc.username}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcPassword</name>
          <description>Database password.</description>
          <property>jdbcPassword</property>
          <required>false</required>
          <expression>${sonar.jdbc.password}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>pluginArtifact</name>
          <description>Path to plugin to install.</description>
          <property>pluginArtifact</property>
          <expression>${sonar.pluginArtifact}</expression>
          <required>false</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/${project.build.finalName}.jar</defaultValue>
        </parameter>
        <parameter>
          <name>copyPluginArtifact</name>
          <description>Should install artifact as a plugin ?</description>
          <property>copyPluginArtifact</property>
          <expression>${sonar.copyPluginArtifact}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
        </parameter>
        <parameter>
          <name>extensionsDir</name>
          <description>Directory from where extensions should be copied.</description>
          <property>extensionsDir</property>
          <expression>${sonar.extensionsDir}</expression>
          <required>false</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/extensions</defaultValue>
        </parameter>
        <parameter>
          <name>background</name>
          <description>Set to true to run Sonar in background mode.</description>
          <property>background</property>
          <expression>${sonar.background}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>false</defaultValue>
        </parameter>
        <parameter>
          <name>clean</name>
          <description>Set to true to clean workspace before starting server.</description>
          <property>clean</property>
          <expression>${sonar.clean}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <description>Path to local Maven repository. Used to load and install sonar ZIP.</description>
          <property>localRepository</property>
          <expression>${settings.localRepository}</expression>
          <required>false</required>
          <type>java.io.File</type>
        </parameter>
        <parameter>
          <name>configBackup</name>
          <description>Path to backup file to restore when server is started.</description>
          <property>configBackup</property>
          <expression>${sonar.configBackup}</expression>
          <required>false</required>
          <type>java.io.File</type>
        </parameter>
        <parameter>
          <name>workDir</name>
          <description>Path to working directory used to install and start server.</description>
          <property>workDir</property>
          <expression>${sonar.workDir}</expression>
          <required>true</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/sonar-work</defaultValue>
        </parameter>
        <parameter>
          <name>mavenHome</name>
          <description>Maven home directory.</description>
          <property>mavenHome</property>
          <required>true</required>
          <expression>${sonar.mavenHome}</expression>
          <type>java.io.File</type>
          <defaultValue>${maven.home}</defaultValue>
        </parameter>

      </parameters>
    </mojo>

    <mojo>
      <goal>stop</goal>
      <description>Stop Sonar.</description>
      <call>stop</call>
      <requiresProject>false</requiresProject>
      <parameters>
        <parameter>
          <name>runtimeVersion</name>
          <description>Sonar version.</description>
          <property>runtimeVersion</property>
          <required>true</required>
          <type>java.lang.String</type>
          <expression>${sonar.runtimeVersion}</expression>
        </parameter>
        <parameter>
          <name>workDir</name>
          <description>Path to working directory used to install and start server</description>
          <property>workDir</property>
          <expression>${sonar.workDir}</expression>
          <required>true</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/sonar-work</defaultValue>
        </parameter>
      </parameters>
    </mojo>

    <mojo>
      <goal>start-war</goal>
      <description>Starts Sonar WAR.</description>
      <call>start-war</call>
      <requiresProject>false</requiresProject>
      <parameters>
        <parameter>
          <name>runtimeVersion</name>
          <description>Version of the Sonar server to install and start.</description>
          <property>runtimeVersion</property>
          <required>true</required>
          <type>java.lang.String</type>
          <expression>${sonar.runtimeVersion}</expression>
        </parameter>
        <parameter>
          <name>database</name>
          <description>Database profile: [h2, derby, mssql, mysql, oracle, postgresql].</description>
          <property>database</property>
          <required>false</required>
          <expression>${sonar.database}</expression>
          <type>java.lang.String</type>
          <defaultValue>h2</defaultValue>
        </parameter>
        <parameter>
          <name>dropDatabase</name>
          <description>Set to true to drop database.</description>
          <property>dropDatabase</property>
          <expression>${sonar.dropDatabase}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>false</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcUrl</name>
          <description>Database URL.</description>
          <property>jdbcUrl</property>
          <required>false</required>
          <expression>${sonar.jdbc.url}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcDriver</name>
          <description>Database driver.</description>
          <property>jdbcDriver</property>
          <required>false</required>
          <expression>${sonar.jdbc.driver}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootUsername</name>
          <description>Database root username. Used when dropDatabase is true.</description>
          <property>jdbcRootUsername</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootUsername}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootPassword</name>
          <description>Database root password. Used when dropDatabase is true.</description>
          <property>jdbcRootPassword</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootPassword}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcRootUrl</name>
          <description>Database root URL. Used when dropDatabase is true.</description>
          <property>jdbcRootUrl</property>
          <required>false</required>
          <expression>${sonar.jdbc.rootUrl}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcUsername</name>
          <description>Database username.</description>
          <property>jdbcUsername</property>
          <required>false</required>
          <expression>${sonar.jdbc.username}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcPassword</name>
          <description>Database password.</description>
          <property>jdbcPassword</property>
          <required>false</required>
          <expression>${sonar.jdbc.password}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>pluginArtifact</name>
          <description>Plugin to install.</description>
          <property>pluginArtifact</property>
          <expression>${sonar.pluginArtifact}</expression>
          <required>false</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/${project.build.finalName}.jar</defaultValue>
        </parameter>
        <parameter>
          <name>copyPluginArtifact</name>
          <description>Should copy plugin artifact in Sonar plugins ?</description>
          <property>copyPluginArtifact</property>
          <expression>${sonar.copyPluginArtifact}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
        </parameter>
        <parameter>
          <name>extensionsDir</name>
          <description>Directory from where extensions should be copied.</description>
          <property>extensionsDir</property>
          <expression>${sonar.extensionsDir}</expression>
          <required>false</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/extensions</defaultValue>
        </parameter>
        <parameter>
          <name>background</name>
          <description>Set to true to run Sonar in background mode.</description>
          <property>background</property>
          <expression>${sonar.background}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>false</defaultValue>
        </parameter>
        <parameter>
          <name>clean</name>
          <description>Set to true to clean workspace before starting server.</description>
          <property>clean</property>
          <expression>${sonar.clean}</expression>
          <required>false</required>
          <type>java.lang.Boolean</type>
          <defaultValue>true</defaultValue>
        </parameter>
        <parameter>
          <name>localRepository</name>
          <description>Local Maven repository used to load and install Sonar ZIP.</description>
          <property>localRepository</property>
          <expression>${settings.localRepository}</expression>
          <required>false</required>
          <type>java.io.File</type>
        </parameter>
        <parameter>
          <name>configBackup</name>
          <description>Path to backup file to restore when server is started.</description>
          <property>configBackup</property>
          <expression>${sonar.configBackup}</expression>
          <required>false</required>
          <type>java.io.File</type>
        </parameter>
        <parameter>
          <name>workDir</name>
          <description>Workspace used to install and start server</description>
          <property>workDir</property>
          <expression>${sonar.workDir}</expression>
          <required>true</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/sonar-work</defaultValue>
        </parameter>
        <parameter>
          <name>containerUrl</name>
          <description>JEE container installation URL</description>
          <property>containerUrl</property>
          <expression>${sonar.containerUrl}</expression>
          <required>true</required>
          <type>java.lang.String</type>
          <defaultValue>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.26/bin/apache-tomcat-6.0.26.zip</defaultValue>
        </parameter>
        <parameter>
          <name>containerId</name>
          <description>JEE container id as defined in Cargo (tomcat6x, tomcat7x, ...)</description>
          <property>containerId</property>
          <expression>${sonar.containerId}</expression>
          <required>true</required>
          <type>java.lang.String</type>
          <defaultValue>tomcat6x</defaultValue>
        </parameter>
        <parameter>
          <name>mavenHome</name>
          <description>Maven home directory.</description>
          <property>mavenHome</property>
          <required>true</required>
          <expression>${sonar.mavenHome}</expression>
          <type>java.io.File</type>
          <defaultValue>${maven.home}</defaultValue>
        </parameter>

      </parameters>
    </mojo>

    <mojo>
      <goal>stop-war</goal>
      <description>Stops Sonar WAR.</description>
      <call>stop-war</call>
      <requiresProject>false</requiresProject>
      <parameters>
        <parameter>
          <name>runtimeVersion</name>
          <description>Sonar version</description>
          <property>runtimeVersion</property>
          <required>true</required>
          <type>java.lang.String</type>
          <expression>${sonar.runtimeVersion}</expression>
        </parameter>
        <parameter>
          <name>workDir</name>
          <description>Path to working directory used to install and start server</description>
          <property>workDir</property>
          <expression>${sonar.workDir}</expression>
          <required>true</required>
          <type>java.io.File</type>
          <defaultValue>${project.build.directory}/sonar-work</defaultValue>
        </parameter>
        <parameter>
          <name>containerUrl</name>
          <description>JEE container installation URL</description>
          <property>containerUrl</property>
          <expression>${sonar.containerUrl}</expression>
          <required>true</required>
          <type>java.lang.String</type>
          <defaultValue>http://archive.apache.org/dist/tomcat/tomcat-6/v6.0.26/bin/apache-tomcat-6.0.26.zip</defaultValue>
        </parameter>
        <parameter>
          <name>containerId</name>
          <description>JEE container id as defined in Cargo</description>
          <property>containerId</property>
          <expression>${sonar.containerId}</expression>
          <required>true</required>
          <type>java.lang.String</type>
          <defaultValue>tomcat6x</defaultValue>
        </parameter>
      </parameters>
    </mojo>

    <mojo>
      <goal>analyze</goal>
      <description>Analyzes projects using Sonar.</description>
      <call>analyze</call>
      <requiresProject>false</requiresProject>
      <parameters>
        <parameter>
          <name>database</name>
          <description>Database profile: [h2, derby, mssql, mysql, oracle, postgresql].</description>
          <property>database</property>
          <required>false</required>
          <expression>${sonar.database}</expression>
          <type>java.lang.String</type>
          <defaultValue>h2</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcUrl</name>
          <description>Database URL.</description>
          <property>jdbcUrl</property>
          <required>false</required>
          <expression>${sonar.jdbc.url}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcDriver</name>
          <description>Database driver.</description>
          <property>jdbcDriver</property>
          <required>false</required>
          <expression>${sonar.jdbc.driver}</expression>
          <type>java.lang.String</type>
        </parameter>
        <parameter>
          <name>jdbcUsername</name>
          <description>Database username.</description>
          <property>jdbcUsername</property>
          <required>false</required>
          <expression>${sonar.jdbc.username}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>jdbcPassword</name>
          <description>Database password.</description>
          <property>jdbcPassword</property>
          <required>false</required>
          <expression>${sonar.jdbc.password}</expression>
          <type>java.lang.String</type>
          <defaultValue>sonar</defaultValue>
        </parameter>
        <parameter>
          <name>projectsDir</name>
          <description>Directory containing projects.</description>
          <property>projectsDir</property>
          <expression>${sonar.projectsDir}</expression>
          <required>true</required>
          <type>java.io.File</type>
          <defaultValue>${basedir}</defaultValue>
        </parameter>
        <parameter>
          <name>mavenHome</name>
          <description>Maven home directory.</description>
          <property>mavenHome</property>
          <required>true</required>
          <expression>${sonar.mavenHome}</expression>
          <type>java.io.File</type>
          <defaultValue>${maven.home}</defaultValue>
        </parameter>
        <parameter>
          <name>buildOptions</name>
          <description>Build options</description>
          <property>buildOptions</property>
          <required>false</required>
          <expression>${sonar.buildOptions}</expression>
          <type>java.lang.String</type>
          <defaultValue>-DskipTests</defaultValue>
        </parameter>
        <parameter>
          <name>analysisOptions</name>
          <description>Analysis options</description>
          <property>analysisOptions</property>
          <required>false</required>
          <expression>${sonar.analysisOptions}</expression>
          <type>java.lang.String</type>
        </parameter>
      </parameters>
    </mojo>

  </mojos>
</pluginMetadata>